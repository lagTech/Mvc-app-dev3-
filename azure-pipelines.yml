# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: "new_agent_pool"

variables:
- name: RG
  value: 'evd_resource_group'
- name: RG_Location
  value: 'eastus'
- name: Vault
  value: 'GuroKeyVault'
- name: AppConfig
  value: 'UlrichAppConfiguration'
- name: LogAnalytics
  value: 'LogAnalytics'
- name: InfrastructureFolder
  value: 'CloudInfrastructure'
- name: ApplicationInsight
  value: 'ApplicationInsights'
- name: BlobName
  value: 'mydevstorage1234'
- name: BlobContainer1
  value: 'unvalidated'
- name: BlobContainer2
  value: 'validated'
- name: SBusName
  value: 'new-namespace-evd'
- name: CosmosDBName
  value: 'mycosmosdev'
- name: ContentName
  value: 'UlrichContentSafety'
steps:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: ARM Deployment
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'AzureSPN-MyDevApp'
      subscriptionId: '90754b4e-6ff3-4abe-ab3c-17af43493fc1'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(RG)'
      location: '$(RG_Location)'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)\$(InfrastructureFolder)\azuredeploy.json'
      csmParametersFile: '$(Build.SourcesDirectory)\$(InfrastructureFolder)\azuredeploy.parameters.json'
      overrideParameters: '-ContentSafetyname $(ContentName) -NoSQLname $(CosmosDBName) -ServiceBusName $(SBusName) -location $(RG_Location) -VaultName $(Vault) -AppConfigName $(AppConfig) -LogAnalyticsName $(LogAnalytics) -ApplicationInsightName $(ApplicationInsight) -storageAccountName $(BlobName) -storageBlobContainerName1 $(BlobContainer1) -storageBlobContainerName2 $(BlobContainer2)'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'Deployment1'
  
  - script: |
      echo $(Deployment1)